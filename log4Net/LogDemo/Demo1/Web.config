<?xml version="1.0" encoding="utf-8"?>

<!--
  有关如何配置 ASP.NET 应用程序的详细消息，请访问
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>
  <configSections>
    <!--第一种方式-->
    <!--<section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>-->
    <!--log4net 自己提供的方式-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
    <!--配置一个结点、用来配置-->
  </configSections>

  <!--log4net config-->
  <log4net debug="true" xmlns="urn:log4net">

    <!--1、把日志内容记录到文件中-->
    <appender name="LogFileAppender" type="log4net.Appender.FileAppender" >
      <!--定义的是日志记录到文件的附着器 name表示该附着器的名称-->
      <!--在log4net中还有一个附着器RollingFileAppender 它表示会循环生成很多文件，举例来说，就是设置一共可以生成20个文件，每个文件的大小为2K，那么如果第一个-->
      <!--文件的大小超过2K，就会自动创建一个按顺序命名的文件-->
      <param name="File" value="c:\Log\DBLog.txt" />
      <!--日志记录的存在路径-->
      <param name="AppendToFile" value="true" />
      <!--为true就表示日志会附加到文件，为false，则会重新创建一个新文件-->
      <layout type="log4net.Layout.PatternLayout">
        <!--输出内容控制-->
        <param name="ConversionPattern" value="%d [%t] %-5p %c [%x] - %m%n" />
      </layout>
    </appender>


    <!--2、把日志文件记录到文件中【一个日期一个文件】-->


    <!--3、把日志文件记录到数据库中-->
    <appender name="ADONetAppender" type="log4net.Appender.AdoNetAppender">
      <!--存储到数据库的操作-->
      <bufferSize value="10"/>
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
      <connectionString value="server=.;database=RockCommonDB;user id=sa;password=sa"/>
      <commandText value="INSERT INTO Log([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES(@log_date, @log_thread, @log_level, @log_logger, @log_message, @log_exception)"/>
      <parameter>
        <parameterName value="@log_date"/>
        <dbType value="DateTime"/>
        <layout type="log4net.Layout.RawTimeStampLayout"/>
        <!--可以认为是记录日志的时间-->
      </parameter>
      <parameter>
        <parameterName value="@log_thread"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread"/>
          <!--记录日志时的线程号-->
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
          <!--日志级别-->
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_logger"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
          <!--哪个记录器存储的该日志-->
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_message"/>
        <dbType value="String"/>
        <size value="4000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
          <!--日志信息-->
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_exception"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.ExceptionLayout"/>
        <!--异常信息-->
      </parameter>
    </appender>

    <!--xsd 支持说明 logger的方式已经过时-->
    <!--<logger name="logFile">
      <level value="ALL"/>
      <appender-ref ref="LogFileAppender"/>
    </logger>-->

    <root>
      <level value="ALL"/>
      <appender-ref ref="LogFileAppender"/>
      <appender-ref ref="ADONetAppender"/>
    </root>

  </log4net>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>

</configuration>
