<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>新闻类别管理</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" /><link href="../css/demo.css" rel="stylesheet" type="text/css" />

    <script src="../scripts/jquery-1.6.2.min.js" type="text/javascript"></script>
    <script src="../scripts/miniui/miniui.js" type="text/javascript"></script><link href="../scripts/miniui/themes/default/miniui.css" rel="stylesheet" type="text/css" />
    <link href="../scripts/miniui/themes/icons.css" rel="stylesheet" type="text/css" />    

</head>
<body>
<div class="mini-toolbar">
    <h1>新闻类别管理</h1>
    
<div class="mini-panel"  title="类别管理" icnCls="icon-add" style="width:100%;height:100%;"
    showToolbar="true" showCollapseButton="true" showFooter="true" 
>
    <!--toolbar-->
    <div property="toolbar"> 


<!--    <input type="button" value="插入类别" onclick="onAddAfter()"/>

    <input type="button" value="编辑类别" onclick="onEditNode()"/>
    <input type="button" value="删除类别" onclick="onRemoveNode()"/>-->
     <a class="mini-button" iconCls="icon-add" id="Add" >插入类别</a>
    <a class="mini-button" iconCls="icon-edit" id="Edit" >编辑类别</a>
    <a class="mini-button" iconCls="icon-remove" id="Delete" >删除类别</a>
    </div>
    <!--footer-->
    <div property="footer">
        <!--<input type='button' value='Footer' style='vertical-align:middle;'/>-->
    </div>
    <!--body-->
      <ul id="tree1" class="mini-tree" url="Data/GetNewsInfo.ashx?method=GetNewsType" style="width:100%;height:100%;padding:5px;"  
        showTreeIcon="true" textField="text" idField="id"
        
        >        
    </ul>

</div>

<br /><br />
    

    </div>

    <script type="text/javascript">
        mini.parse();
        function onAddBefore(e) {
            var tree = mini.get("tree1");
            var node = tree.getSelectedNode();

            var newNode = {};
            tree.addNode(newNode, "before", node);
        }
        function onAddAfter(e) {
            var tree = mini.get("tree1");
            var node = tree.getSelectedNode();
           
            var newNode = {"id":0,"text":"空"};
            mini.prompt("请输入类别内容：", "请输入",
            function (action, value) {
                if (action == "ok"){
                     $.ajax({
                        url:"Data/GetNewsInfo.ashx",
                        type:"post",
                        data:"method=AddNewsType&text="+value,
                        success:function(msg){
                            if(msg){
                            alert("添加成功!");
                            newNode.text=value;
                            tree.addNode(newNode,"add",node);
                            }
                            else
                            alert("添加失败!");
                    //TreeLoad();
                         }
                      });
               
                }
               else {
                newNode.text="空";
               }
           });
         }

          
      
        //刷新树
        function TreeLoad(){
        $.ajax({
        url:"Data/GetNewsInfo.ashx?method=GetNewsType",
        type:"json",
        success:function(json){
          var tree = mini.get("tree1");  
            //  alert(json);
            var data=  eval("("+json+")");
               tree.loadData(data);
               }
        });
        
        }
         $("#Add").bind("click",function(e)
        {
        onAddAfter(e);
        });
        $("#Edit").bind("click",function(e)
        {
         onEditNode(e);
        });
        $("#Delete").bind("click",function(e)
        {
        onRemoveNode(e);
        });
        function onAddNode(e) {
            var tree = mini.get("tree1");
            var node = tree.getSelectedNode();

            var newNode = {};
        
            tree.addNode(newNode, "add", node);
            
        }
        function onEditNode(e) {
            var tree = mini.get("tree1");
            var node = tree.getSelectedNode();
       mini.prompt("请输入类别内容：", "请输入",
            function (action, value) {
                if (action == "ok") {
                 $.ajax({
                    url:"Data/GetNewsInfo.ashx",
                    type:"post",
                    data:"method=SaveNewsType&id="+node.id+"&text="+value,
                    success:function(msg){
                   if(msg){
                    alert("保存成功!");
                      tree.setNodeText(node,value);
                      //TreeLoad();
                    }
                    else
                    alert("保存失败!");
                    }
                    }); 
                  
                }
                
            });              
        }
//          function promptClick() {
//             var tree = mini.get("tree1");
//            var node = tree.getSelectedNode();

//        mini.prompt("请输入类别内容：", "请输入",
//            function (action, value) {
//                if (action == "ok") {
//                node.text=value;
//                } else {
//                 
//                    node.text="空";
//                }
//                
//            }
//        );
//        }
        function onRemoveNode(e) {
            var tree = mini.get("tree1");
            var node = tree.getSelectedNode();
          
             if (node) {
                if (confirm("确定删除选中节点?")) {
                   
                    //这里提交到服务器
                    $.ajax({
                    url:"Data/GetNewsInfo.ashx",
                    type:"post",
                    data:"method=RemoveNewsType&id="+node.id,
                    success:function(msg){
                     if(msg){
                     tree.removeNode(node);
                     
                     alert("删除成功!");
                     }
                     else{
                     alert("删除失败!");
                     }
                    

                    // tree.removeNode(node);
                   
                 
                    }
                    });
                    
                }
            }
        }
        function onMoveNode(e) {
            var tree = mini.get("tree1");
            var node = tree.getSelectedNode();

            alert("moveNode");
        }
        
    </script>

</body>
</html>